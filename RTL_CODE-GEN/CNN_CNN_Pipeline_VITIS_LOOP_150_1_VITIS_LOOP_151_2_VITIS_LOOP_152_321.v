// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CNN_CNN_Pipeline_VITIS_LOOP_150_1_VITIS_LOOP_151_2_VITIS_LOOP_152_321 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        zext_ln147_3,
        output_conv5,
        output_upsampling2,
        mul_ln147,
        shl_ln1,
        icmp_ln152_3
);

parameter    ap_ST_fsm_pp0_stage0 = 14'd1;
parameter    ap_ST_fsm_pp0_stage1 = 14'd2;
parameter    ap_ST_fsm_pp0_stage2 = 14'd4;
parameter    ap_ST_fsm_pp0_stage3 = 14'd8;
parameter    ap_ST_fsm_pp0_stage4 = 14'd16;
parameter    ap_ST_fsm_pp0_stage5 = 14'd32;
parameter    ap_ST_fsm_pp0_stage6 = 14'd64;
parameter    ap_ST_fsm_pp0_stage7 = 14'd128;
parameter    ap_ST_fsm_pp0_stage8 = 14'd256;
parameter    ap_ST_fsm_pp0_stage9 = 14'd512;
parameter    ap_ST_fsm_pp0_stage10 = 14'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 14'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 14'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [63:0] m_axi_gmem_WDATA;
output  [7:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [63:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [66:0] zext_ln147_3;
input  [63:0] output_conv5;
input  [63:0] output_upsampling2;
input  [63:0] mul_ln147;
input  [31:0] shl_ln1;
input  [0:0] icmp_ln152_3;

reg ap_idle;
reg m_axi_gmem_AWVALID;
reg[63:0] m_axi_gmem_AWADDR;
reg m_axi_gmem_WVALID;
reg[63:0] m_axi_gmem_WDATA;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;
reg m_axi_gmem_BREADY;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
reg   [0:0] icmp_ln150_reg_928;
reg   [0:0] select_ln151_7_reg_966;
reg    ap_predicate_op118_readreq_state3;
reg    ap_block_state3_io;
reg   [0:0] select_ln151_7_reg_966_pp0_iter1_reg;
reg    ap_block_state17_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_subdone;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_subdone;
reg    gmem_blk_n_AR;
wire    ap_block_pp0_stage2;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
reg    gmem_blk_n_AW;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state15_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] i_8_reg_918;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state16_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
wire   [2:0] empty_fu_264_p1;
reg   [2:0] empty_reg_923;
wire   [0:0] icmp_ln150_fu_290_p2;
wire   [0:0] icmp_ln151_fu_313_p2;
reg   [0:0] icmp_ln151_reg_932;
wire   [2:0] empty_244_fu_326_p1;
reg   [2:0] empty_244_reg_939;
wire   [2:0] select_ln150_8_fu_330_p3;
reg   [2:0] select_ln150_8_reg_944;
wire   [0:0] select_ln150_13_fu_375_p3;
reg   [0:0] select_ln150_13_reg_949;
wire   [31:0] add_ln151_1_fu_390_p2;
reg   [31:0] add_ln151_1_reg_955;
wire   [31:0] select_ln151_fu_402_p3;
reg   [31:0] select_ln151_reg_960;
wire   [0:0] select_ln151_7_fu_414_p3;
reg   [60:0] trunc_ln155_1_reg_970;
reg    ap_block_pp0_stage2_11001;
reg   [60:0] trunc_ln156_1_reg_981;
reg   [60:0] trunc_ln158_2_reg_986;
reg   [60:0] trunc_ln158_3_reg_991;
wire    ap_block_state4_pp0_stage3_iter0;
reg    ap_predicate_op145_readreq_state4;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage3_11001;
reg   [63:0] upsam_buf_reg_1002;
reg    ap_predicate_op156_read_state10;
reg    ap_block_state10_pp0_stage9_iter0;
reg    ap_predicate_op159_writereq_state10;
reg    ap_block_state10_io;
reg    ap_block_pp0_stage9_11001;
reg   [63:0] gmem_addr_read_reg_1013;
reg    ap_predicate_op162_read_state11;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_predicate_op161_write_state11;
reg    ap_predicate_op165_writereq_state11;
reg    ap_block_state11_io;
reg    ap_block_pp0_stage10_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire  signed [63:0] sext_ln155_2_fu_675_p1;
wire  signed [63:0] sext_ln158_2_fu_820_p1;
wire  signed [63:0] sext_ln156_1_fu_830_p1;
wire  signed [63:0] sext_ln158_3_fu_840_p1;
reg    ap_block_pp0_stage10_01001;
wire    ap_block_state12_pp0_stage11_iter0;
reg    ap_predicate_op167_write_state12;
reg    ap_block_state12_io;
reg    ap_block_pp0_stage11_11001;
wire    ap_block_pp0_stage11_01001;
reg   [31:0] j_fu_118;
wire   [31:0] add_ln152_fu_512_p2;
wire    ap_loop_init;
reg   [31:0] i_fu_122;
wire   [31:0] select_ln151_11_fu_448_p3;
reg   [63:0] indvar_flatten1712_fu_126;
wire   [63:0] select_ln151_12_fu_524_p3;
reg   [3:0] num_channel_fu_130;
wire   [3:0] select_ln150_14_fu_382_p3;
reg   [66:0] indvar_flatten1753_fu_134;
wire   [66:0] add_ln150_fu_295_p2;
wire    ap_block_pp0_stage0;
wire   [28:0] tmp_27_fu_272_p4;
wire   [3:0] add_ln150_1_fu_307_p2;
wire   [8:0] p_cast198_mid2_v_fu_338_p3;
wire   [0:0] empty_243_fu_268_p1;
wire   [0:0] xor_ln150_fu_350_p2;
wire   [31:0] mul7_i1_fu_282_p3;
wire   [0:0] icmp_ln152_fu_370_p2;
wire   [31:0] select_ln150_fu_318_p3;
wire   [0:0] or_ln151_fu_396_p2;
wire   [0:0] empty_245_fu_410_p1;
wire   [0:0] and_ln150_fu_356_p2;
wire   [28:0] tmp_29_fu_422_p4;
wire   [31:0] mul7_i723_mid1_fu_432_p3;
wire   [31:0] select_ln150_10_fu_362_p3;
wire   [30:0] div8_i725_udiv_fu_456_p4;
wire   [31:0] zext_ln150_fu_346_p1;
wire   [31:0] div8_i725_udiv_cast_fu_466_p1;
wire   [31:0] add_ln155_fu_470_p2;
wire   [31:0] select_ln151_8_fu_440_p3;
wire   [31:0] add_ln155_2_fu_476_p2;
wire   [34:0] shl_ln155_1_fu_482_p3;
wire  signed [63:0] sext_ln155_fu_490_p1;
wire   [63:0] add_ln155_3_fu_494_p2;
wire   [63:0] add_ln151_fu_518_p2;
wire   [10:0] tmp_s_fu_557_p3;
wire   [35:0] tmp_28_fu_568_p3;
wire   [36:0] p_cast157_fu_564_p1;
wire   [36:0] zext_ln152_fu_575_p1;
wire   [10:0] p_mid6_fu_585_p3;
wire   [10:0] select_ln150_9_fu_592_p3;
wire   [6:0] zext_ln151_1_mid2_v_fu_607_p3;
wire   [36:0] zext_ln150_7_fu_625_p1;
wire   [36:0] add_ln158_fu_579_p2;
wire   [35:0] p_mid7_fu_636_p3;
wire   [35:0] select_ln150_11_fu_618_p3;
wire   [35:0] select_ln151_9_fu_647_p3;
wire   [36:0] zext_ln150_4_fu_599_p1;
wire   [36:0] zext_ln152_1_fu_643_p1;
wire   [36:0] add_ln158_6_fu_658_p2;
wire   [36:0] select_ln150_12_fu_629_p3;
wire   [36:0] select_ln151_10_fu_664_p3;
wire   [32:0] zext_ln150_5_fu_603_p1;
wire   [32:0] zext_ln156_fu_685_p1;
wire   [32:0] add_ln156_fu_688_p2;
wire   [36:0] zext_ln156_1_fu_694_p1;
wire   [36:0] zext_ln158_fu_654_p1;
wire   [36:0] add_ln156_4_fu_698_p2;
wire   [39:0] shl_ln156_1_fu_704_p3;
wire   [63:0] zext_ln156_2_fu_712_p1;
wire   [63:0] add_ln156_3_fu_716_p2;
wire   [32:0] zext_ln158_3_fu_731_p1;
wire   [32:0] add_ln158_8_fu_734_p2;
wire  signed [37:0] sext_ln158_fu_740_p1;
wire   [37:0] zext_ln151_fu_671_p1;
wire   [37:0] add_ln158_9_fu_744_p2;
wire   [40:0] tmp_30_fu_750_p3;
wire  signed [63:0] sext_ln158_5_fu_758_p1;
wire   [63:0] add_ln158_5_fu_762_p2;
wire   [32:0] zext_ln150_6_fu_614_p1;
wire   [32:0] add_ln158_10_fu_777_p2;
wire   [36:0] zext_ln158_4_fu_783_p1;
wire   [36:0] add_ln158_11_fu_787_p2;
wire   [39:0] shl_ln158_3_fu_793_p3;
wire   [63:0] zext_ln158_5_fu_801_p1;
wire   [63:0] add_ln158_7_fu_805_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [13:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage3_subdone;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_872;
reg    ap_condition_876;
reg    ap_condition_880;
reg    ap_condition_884;
reg    ap_condition_888;
reg    ap_condition_892;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

CNN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_fu_122 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln150_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        i_fu_122 <= select_ln151_11_fu_448_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten1712_fu_126 <= 64'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln150_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        indvar_flatten1712_fu_126 <= select_ln151_12_fu_524_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten1753_fu_134 <= 67'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln150_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        indvar_flatten1753_fu_134 <= add_ln150_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        j_fu_118 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln150_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        j_fu_118 <= add_ln152_fu_512_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        num_channel_fu_130 <= 4'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln150_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        num_channel_fu_130 <= select_ln150_14_fu_382_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln150_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln151_1_reg_955 <= add_ln151_1_fu_390_p2;
        empty_244_reg_939 <= empty_244_fu_326_p1;
        icmp_ln151_reg_932 <= icmp_ln151_fu_313_p2;
        select_ln150_13_reg_949 <= select_ln150_13_fu_375_p3;
        select_ln150_8_reg_944 <= select_ln150_8_fu_330_p3;
        select_ln151_7_reg_966 <= select_ln151_7_fu_414_p3;
        select_ln151_reg_960 <= select_ln151_fu_402_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        empty_reg_923 <= empty_fu_264_p1;
        i_8_reg_918 <= i_fu_122;
        icmp_ln150_reg_928 <= icmp_ln150_fu_290_p2;
        select_ln151_7_reg_966_pp0_iter1_reg <= select_ln151_7_reg_966;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op162_read_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        gmem_addr_read_reg_1013 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln151_7_fu_414_p3 == 1'd0) & (icmp_ln150_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        trunc_ln155_1_reg_970 <= {{add_ln155_3_fu_494_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (select_ln151_7_reg_966 == 1'd0) & (icmp_ln150_reg_928 == 1'd0))) begin
        trunc_ln156_1_reg_981 <= {{add_ln156_3_fu_716_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (select_ln151_7_reg_966 == 1'd1) & (icmp_ln150_reg_928 == 1'd0))) begin
        trunc_ln158_2_reg_986 <= {{add_ln158_5_fu_762_p2[63:3]}};
        trunc_ln158_3_reg_991 <= {{add_ln158_7_fu_805_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op156_read_state10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        upsam_buf_reg_1002 <= m_axi_gmem_RDATA;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone) & (icmp_ln150_reg_928 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_predicate_op118_readreq_state3 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (select_ln151_7_reg_966 == 1'd1) & (icmp_ln150_reg_928 == 1'd0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (select_ln151_7_reg_966 == 1'd1) & (icmp_ln150_reg_928 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (select_ln151_7_reg_966 == 1'd0) & (icmp_ln150_reg_928 == 1'd0)))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (select_ln151_7_reg_966_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (select_ln151_7_reg_966 == 1'd0)))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (select_ln151_7_reg_966 == 1'd1) & (icmp_ln150_reg_928 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (select_ln151_7_reg_966 == 1'd0) & (icmp_ln150_reg_928 == 1'd0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (select_ln151_7_reg_966 == 1'd1) & (icmp_ln150_reg_928 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (select_ln151_7_reg_966 == 1'd0) & (icmp_ln150_reg_928 == 1'd0)))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_876)) begin
            m_axi_gmem_ARADDR = sext_ln158_2_fu_820_p1;
        end else if ((1'b1 == ap_condition_872)) begin
            m_axi_gmem_ARADDR = sext_ln155_2_fu_675_p1;
        end else begin
            m_axi_gmem_ARADDR = 'bx;
        end
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op118_readreq_state3 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op145_readreq_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_884)) begin
            m_axi_gmem_AWADDR = sext_ln158_3_fu_840_p1;
        end else if ((1'b1 == ap_condition_880)) begin
            m_axi_gmem_AWADDR = sext_ln156_1_fu_830_p1;
        end else begin
            m_axi_gmem_AWADDR = 'bx;
        end
    end else begin
        m_axi_gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op165_writereq_state11 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op159_writereq_state10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (select_ln151_7_reg_966_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (select_ln151_7_reg_966 == 1'd0)))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op162_read_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op156_read_state10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_892)) begin
            m_axi_gmem_WDATA = gmem_addr_read_reg_1013;
        end else if ((1'b1 == ap_condition_888)) begin
            m_axi_gmem_WDATA = upsam_buf_reg_1002;
        end else begin
            m_axi_gmem_WDATA = 'bx;
        end
    end else begin
        m_axi_gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op167_write_state12 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op161_write_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln150_1_fu_307_p2 = (num_channel_fu_130 + 4'd1);

assign add_ln150_fu_295_p2 = (indvar_flatten1753_fu_134 + 67'd1);

assign add_ln151_1_fu_390_p2 = (select_ln150_fu_318_p3 + 32'd1);

assign add_ln151_fu_518_p2 = (indvar_flatten1712_fu_126 + 64'd1);

assign add_ln152_fu_512_p2 = (select_ln151_fu_402_p3 + 32'd1);

assign add_ln155_2_fu_476_p2 = (add_ln155_fu_470_p2 + select_ln151_8_fu_440_p3);

assign add_ln155_3_fu_494_p2 = ($signed(sext_ln155_fu_490_p1) + $signed(output_conv5));

assign add_ln155_fu_470_p2 = (zext_ln150_fu_346_p1 + div8_i725_udiv_cast_fu_466_p1);

assign add_ln156_3_fu_716_p2 = (zext_ln156_2_fu_712_p1 + output_upsampling2);

assign add_ln156_4_fu_698_p2 = (zext_ln156_1_fu_694_p1 + zext_ln158_fu_654_p1);

assign add_ln156_fu_688_p2 = (zext_ln150_5_fu_603_p1 + zext_ln156_fu_685_p1);

assign add_ln158_10_fu_777_p2 = (zext_ln150_6_fu_614_p1 + zext_ln158_3_fu_731_p1);

assign add_ln158_11_fu_787_p2 = (zext_ln158_4_fu_783_p1 + zext_ln158_fu_654_p1);

assign add_ln158_5_fu_762_p2 = ($signed(sext_ln158_5_fu_758_p1) + $signed(output_upsampling2));

assign add_ln158_6_fu_658_p2 = (zext_ln150_4_fu_599_p1 + zext_ln152_1_fu_643_p1);

assign add_ln158_7_fu_805_p2 = (zext_ln158_5_fu_801_p1 + output_upsampling2);

assign add_ln158_8_fu_734_p2 = ($signed(zext_ln158_3_fu_731_p1) + $signed(33'd8589934576));

assign add_ln158_9_fu_744_p2 = ($signed(sext_ln158_fu_740_p1) + $signed(zext_ln151_fu_671_p1));

assign add_ln158_fu_579_p2 = (p_cast157_fu_564_p1 + zext_ln152_fu_575_p1);

assign and_ln150_fu_356_p2 = (xor_ln150_fu_350_p2 & empty_243_fu_268_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_01001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op162_read_state11 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op162_read_state11 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op162_read_state11 == 1'b1))));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state12_io));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state12_io));
end

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((m_axi_gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln151_7_reg_966 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((m_axi_gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln151_7_reg_966 == 1'd0));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((m_axi_gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln151_7_reg_966_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((m_axi_gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln151_7_reg_966_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io));
end

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op156_read_state10 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op156_read_state10 == 1'b1))));
end

always @ (*) begin
    ap_block_state10_io = ((m_axi_gmem_AWREADY == 1'b0) & (ap_predicate_op159_writereq_state10 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op156_read_state10 == 1'b1));
end

always @ (*) begin
    ap_block_state11_io = (((m_axi_gmem_WREADY == 1'b0) & (ap_predicate_op161_write_state11 == 1'b1)) | ((m_axi_gmem_AWREADY == 1'b0) & (ap_predicate_op165_writereq_state11 == 1'b1)));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op162_read_state11 == 1'b1));
end

always @ (*) begin
    ap_block_state12_io = ((m_axi_gmem_WREADY == 1'b0) & (ap_predicate_op167_write_state12 == 1'b1));
end

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_pp0_stage1_iter1 = ((m_axi_gmem_BVALID == 1'b0) & (select_ln151_7_reg_966 == 1'd0));
end

always @ (*) begin
    ap_block_state17_pp0_stage2_iter1 = ((m_axi_gmem_BVALID == 1'b0) & (select_ln151_7_reg_966_pp0_iter1_reg == 1'd1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op118_readreq_state3 == 1'b1));
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op145_readreq_state4 == 1'b1));
end

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_872 = ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op118_readreq_state3 == 1'b1));
end

always @ (*) begin
    ap_condition_876 = ((ap_predicate_op145_readreq_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001));
end

always @ (*) begin
    ap_condition_880 = ((ap_predicate_op159_writereq_state10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001));
end

always @ (*) begin
    ap_condition_884 = ((ap_predicate_op165_writereq_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001));
end

always @ (*) begin
    ap_condition_888 = ((ap_predicate_op161_write_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_01001));
end

always @ (*) begin
    ap_condition_892 = ((ap_predicate_op167_write_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_01001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

always @ (*) begin
    ap_predicate_op118_readreq_state3 = ((select_ln151_7_reg_966 == 1'd0) & (icmp_ln150_reg_928 == 1'd0));
end

always @ (*) begin
    ap_predicate_op145_readreq_state4 = ((select_ln151_7_reg_966 == 1'd1) & (icmp_ln150_reg_928 == 1'd0));
end

always @ (*) begin
    ap_predicate_op156_read_state10 = ((select_ln151_7_reg_966 == 1'd0) & (icmp_ln150_reg_928 == 1'd0));
end

always @ (*) begin
    ap_predicate_op159_writereq_state10 = ((select_ln151_7_reg_966 == 1'd0) & (icmp_ln150_reg_928 == 1'd0));
end

always @ (*) begin
    ap_predicate_op161_write_state11 = ((select_ln151_7_reg_966 == 1'd0) & (icmp_ln150_reg_928 == 1'd0));
end

always @ (*) begin
    ap_predicate_op162_read_state11 = ((select_ln151_7_reg_966 == 1'd1) & (icmp_ln150_reg_928 == 1'd0));
end

always @ (*) begin
    ap_predicate_op165_writereq_state11 = ((select_ln151_7_reg_966 == 1'd1) & (icmp_ln150_reg_928 == 1'd0));
end

always @ (*) begin
    ap_predicate_op167_write_state12 = ((select_ln151_7_reg_966 == 1'd1) & (icmp_ln150_reg_928 == 1'd0));
end

assign div8_i725_udiv_cast_fu_466_p1 = div8_i725_udiv_fu_456_p4;

assign div8_i725_udiv_fu_456_p4 = {{select_ln151_fu_402_p3[31:1]}};

assign empty_243_fu_268_p1 = i_fu_122[0:0];

assign empty_244_fu_326_p1 = add_ln150_1_fu_307_p2[2:0];

assign empty_245_fu_410_p1 = add_ln151_1_fu_390_p2[0:0];

assign empty_fu_264_p1 = num_channel_fu_130[2:0];

assign icmp_ln150_fu_290_p2 = ((indvar_flatten1753_fu_134 == zext_ln147_3) ? 1'b1 : 1'b0);

assign icmp_ln151_fu_313_p2 = ((indvar_flatten1712_fu_126 == mul_ln147) ? 1'b1 : 1'b0);

assign icmp_ln152_fu_370_p2 = ((j_fu_118 == shl_ln1) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd1;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 8'd255;

assign m_axi_gmem_WUSER = 1'd0;

assign mul7_i1_fu_282_p3 = {{tmp_27_fu_272_p4}, {3'd0}};

assign mul7_i723_mid1_fu_432_p3 = {{tmp_29_fu_422_p4}, {3'd0}};

assign or_ln151_fu_396_p2 = (select_ln150_13_fu_375_p3 | icmp_ln151_fu_313_p2);

assign p_cast157_fu_564_p1 = tmp_s_fu_557_p3;

assign p_cast198_mid2_v_fu_338_p3 = {{select_ln150_8_fu_330_p3}, {6'd0}};

assign p_mid6_fu_585_p3 = {{empty_244_reg_939}, {8'd0}};

assign p_mid7_fu_636_p3 = {{add_ln151_1_reg_955}, {4'd0}};

assign select_ln150_10_fu_362_p3 = ((icmp_ln151_fu_313_p2[0:0] == 1'b1) ? 32'd0 : mul7_i1_fu_282_p3);

assign select_ln150_11_fu_618_p3 = ((icmp_ln151_reg_932[0:0] == 1'b1) ? 36'd0 : tmp_28_fu_568_p3);

assign select_ln150_12_fu_629_p3 = ((icmp_ln151_reg_932[0:0] == 1'b1) ? zext_ln150_7_fu_625_p1 : add_ln158_fu_579_p2);

assign select_ln150_13_fu_375_p3 = ((icmp_ln151_fu_313_p2[0:0] == 1'b1) ? icmp_ln152_3 : icmp_ln152_fu_370_p2);

assign select_ln150_14_fu_382_p3 = ((icmp_ln151_fu_313_p2[0:0] == 1'b1) ? add_ln150_1_fu_307_p2 : num_channel_fu_130);

assign select_ln150_8_fu_330_p3 = ((icmp_ln151_fu_313_p2[0:0] == 1'b1) ? empty_244_fu_326_p1 : empty_fu_264_p1);

assign select_ln150_9_fu_592_p3 = ((icmp_ln151_reg_932[0:0] == 1'b1) ? p_mid6_fu_585_p3 : tmp_s_fu_557_p3);

assign select_ln150_fu_318_p3 = ((icmp_ln151_fu_313_p2[0:0] == 1'b1) ? 32'd0 : i_fu_122);

assign select_ln151_10_fu_664_p3 = ((select_ln150_13_reg_949[0:0] == 1'b1) ? add_ln158_6_fu_658_p2 : select_ln150_12_fu_629_p3);

assign select_ln151_11_fu_448_p3 = ((select_ln150_13_fu_375_p3[0:0] == 1'b1) ? add_ln151_1_fu_390_p2 : select_ln150_fu_318_p3);

assign select_ln151_12_fu_524_p3 = ((icmp_ln151_fu_313_p2[0:0] == 1'b1) ? 64'd1 : add_ln151_fu_518_p2);

assign select_ln151_7_fu_414_p3 = ((select_ln150_13_fu_375_p3[0:0] == 1'b1) ? empty_245_fu_410_p1 : and_ln150_fu_356_p2);

assign select_ln151_8_fu_440_p3 = ((select_ln150_13_fu_375_p3[0:0] == 1'b1) ? mul7_i723_mid1_fu_432_p3 : select_ln150_10_fu_362_p3);

assign select_ln151_9_fu_647_p3 = ((select_ln150_13_reg_949[0:0] == 1'b1) ? p_mid7_fu_636_p3 : select_ln150_11_fu_618_p3);

assign select_ln151_fu_402_p3 = ((or_ln151_fu_396_p2[0:0] == 1'b1) ? 32'd0 : j_fu_118);

assign sext_ln155_2_fu_675_p1 = $signed(trunc_ln155_1_reg_970);

assign sext_ln155_fu_490_p1 = $signed(shl_ln155_1_fu_482_p3);

assign sext_ln156_1_fu_830_p1 = $signed(trunc_ln156_1_reg_981);

assign sext_ln158_2_fu_820_p1 = $signed(trunc_ln158_2_reg_986);

assign sext_ln158_3_fu_840_p1 = $signed(trunc_ln158_3_reg_991);

assign sext_ln158_5_fu_758_p1 = $signed(tmp_30_fu_750_p3);

assign sext_ln158_fu_740_p1 = $signed(add_ln158_8_fu_734_p2);

assign shl_ln155_1_fu_482_p3 = {{add_ln155_2_fu_476_p2}, {3'd0}};

assign shl_ln156_1_fu_704_p3 = {{add_ln156_4_fu_698_p2}, {3'd0}};

assign shl_ln158_3_fu_793_p3 = {{add_ln158_11_fu_787_p2}, {3'd0}};

assign tmp_27_fu_272_p4 = {{i_fu_122[29:1]}};

assign tmp_28_fu_568_p3 = {{i_8_reg_918}, {4'd0}};

assign tmp_29_fu_422_p4 = {{add_ln151_1_fu_390_p2[29:1]}};

assign tmp_30_fu_750_p3 = {{add_ln158_9_fu_744_p2}, {3'd0}};

assign tmp_s_fu_557_p3 = {{empty_reg_923}, {8'd0}};

assign xor_ln150_fu_350_p2 = (icmp_ln151_fu_313_p2 ^ 1'd1);

assign zext_ln150_4_fu_599_p1 = select_ln150_9_fu_592_p3;

assign zext_ln150_5_fu_603_p1 = select_ln150_9_fu_592_p3;

assign zext_ln150_6_fu_614_p1 = zext_ln151_1_mid2_v_fu_607_p3;

assign zext_ln150_7_fu_625_p1 = p_mid6_fu_585_p3;

assign zext_ln150_fu_346_p1 = p_cast198_mid2_v_fu_338_p3;

assign zext_ln151_1_mid2_v_fu_607_p3 = {{select_ln150_8_reg_944}, {4'd0}};

assign zext_ln151_fu_671_p1 = select_ln151_10_fu_664_p3;

assign zext_ln152_1_fu_643_p1 = p_mid7_fu_636_p3;

assign zext_ln152_fu_575_p1 = tmp_28_fu_568_p3;

assign zext_ln156_1_fu_694_p1 = add_ln156_fu_688_p2;

assign zext_ln156_2_fu_712_p1 = shl_ln156_1_fu_704_p3;

assign zext_ln156_fu_685_p1 = select_ln151_reg_960;

assign zext_ln158_3_fu_731_p1 = select_ln151_reg_960;

assign zext_ln158_4_fu_783_p1 = add_ln158_10_fu_777_p2;

assign zext_ln158_5_fu_801_p1 = shl_ln158_3_fu_793_p3;

assign zext_ln158_fu_654_p1 = select_ln151_9_fu_647_p3;

endmodule //CNN_CNN_Pipeline_VITIS_LOOP_150_1_VITIS_LOOP_151_2_VITIS_LOOP_152_321
