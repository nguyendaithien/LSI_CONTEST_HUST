// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CNN_CNN_Pipeline_VITIS_LOOP_150_1_VITIS_LOOP_151_2_VITIS_LOOP_152_326 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        mul_ln150,
        output_conv6,
        output_upsampling3,
        mul_ln147,
        shl_ln1,
        icmp_ln152_3
);

parameter    ap_ST_fsm_pp0_stage0 = 14'd1;
parameter    ap_ST_fsm_pp0_stage1 = 14'd2;
parameter    ap_ST_fsm_pp0_stage2 = 14'd4;
parameter    ap_ST_fsm_pp0_stage3 = 14'd8;
parameter    ap_ST_fsm_pp0_stage4 = 14'd16;
parameter    ap_ST_fsm_pp0_stage5 = 14'd32;
parameter    ap_ST_fsm_pp0_stage6 = 14'd64;
parameter    ap_ST_fsm_pp0_stage7 = 14'd128;
parameter    ap_ST_fsm_pp0_stage8 = 14'd256;
parameter    ap_ST_fsm_pp0_stage9 = 14'd512;
parameter    ap_ST_fsm_pp0_stage10 = 14'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 14'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 14'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [63:0] m_axi_gmem_WDATA;
output  [7:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [63:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [67:0] mul_ln150;
input  [63:0] output_conv6;
input  [63:0] output_upsampling3;
input  [63:0] mul_ln147;
input  [31:0] shl_ln1;
input  [0:0] icmp_ln152_3;

reg ap_idle;
reg m_axi_gmem_AWVALID;
reg[63:0] m_axi_gmem_AWADDR;
reg m_axi_gmem_WVALID;
reg[63:0] m_axi_gmem_WDATA;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;
reg m_axi_gmem_BREADY;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
reg   [0:0] icmp_ln150_reg_1146;
reg   [0:0] select_ln151_1_reg_1171;
reg    ap_predicate_op158_readreq_state4;
reg    ap_block_state4_io;
reg   [0:0] select_ln151_1_reg_1171_pp0_iter1_reg;
reg    ap_block_state18_pp0_stage3_iter1;
reg    ap_block_pp0_stage3_subdone;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_subdone;
reg    gmem_blk_n_AR;
wire    ap_block_pp0_stage3;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
reg    gmem_blk_n_AW;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state15_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] num_channel_1_reg_1131;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state16_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire   [13:0] empty_fu_275_p2;
reg   [13:0] empty_reg_1140;
wire   [0:0] icmp_ln150_fu_281_p2;
wire   [0:0] icmp_ln151_fu_295_p2;
reg   [0:0] icmp_ln151_reg_1150;
wire   [31:0] select_ln151_fu_660_p3;
reg   [31:0] select_ln151_reg_1164;
wire    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state17_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_11001;
wire   [0:0] select_ln151_1_fu_676_p3;
wire   [38:0] select_ln151_3_fu_804_p3;
reg   [38:0] select_ln151_3_reg_1175;
wire   [38:0] select_ln151_4_fu_818_p3;
reg   [38:0] select_ln151_4_reg_1180;
reg   [60:0] trunc_ln155_2_reg_1186;
reg    ap_block_pp0_stage3_11001;
reg   [60:0] trunc_ln156_2_reg_1197;
reg   [60:0] trunc_ln158_4_reg_1202;
reg   [60:0] trunc_ln158_5_reg_1207;
wire    ap_block_state5_pp0_stage4_iter0;
reg    ap_predicate_op182_readreq_state5;
reg    ap_block_state5_io;
reg    ap_block_pp0_stage4_11001;
reg   [63:0] upsam_buf_reg_1218;
reg    ap_predicate_op193_read_state11;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_predicate_op196_writereq_state11;
reg    ap_block_state11_io;
reg    ap_block_pp0_stage10_11001;
reg   [63:0] gmem_addr_read_reg_1229;
reg    ap_predicate_op199_read_state12;
reg    ap_block_state12_pp0_stage11_iter0;
reg    ap_predicate_op198_write_state12;
reg    ap_predicate_op202_writereq_state12;
reg    ap_block_state12_io;
reg    ap_block_pp0_stage11_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire  signed [63:0] sext_ln155_1_fu_908_p1;
wire  signed [63:0] sext_ln158_2_fu_1033_p1;
wire  signed [63:0] sext_ln156_1_fu_1043_p1;
wire  signed [63:0] sext_ln158_4_fu_1053_p1;
reg    ap_block_pp0_stage11_01001;
wire    ap_block_state13_pp0_stage12_iter0;
reg    ap_predicate_op204_write_state13;
reg    ap_block_state13_io;
reg    ap_block_pp0_stage12_11001;
wire    ap_block_pp0_stage12_01001;
reg   [31:0] j_fu_128;
wire   [31:0] add_ln152_fu_887_p2;
wire    ap_loop_init;
reg   [31:0] i_fu_132;
wire   [31:0] select_ln151_5_fu_826_p3;
reg   [63:0] indvar_flatten1903_fu_136;
wire   [63:0] select_ln151_6_fu_309_p3;
wire    ap_block_pp0_stage1;
reg   [3:0] num_channel_fu_140;
wire   [3:0] select_ln150_1_fu_505_p3;
reg   [67:0] indvar_flatten1971_fu_144;
wire   [67:0] add_ln150_fu_286_p2;
wire    ap_block_pp0_stage0;
wire   [3:0] empty_fu_275_p0;
wire   [10:0] empty_fu_275_p1;
wire   [63:0] add_ln151_1_fu_303_p2;
wire   [11:0] p_shl_fu_336_p3;
wire   [8:0] p_shl4_fu_347_p3;
wire   [12:0] p_shl104_cast_fu_343_p1;
wire   [12:0] p_shl105_cast_fu_354_p1;
wire   [30:0] tmp_s_fu_372_p4;
wire   [27:0] tmp_20_fu_390_p4;
wire   [31:0] p_shl5_fu_400_p3;
wire   [31:0] div_i_udiv_fu_382_p3;
wire   [36:0] p_shl6_fu_414_p3;
wire   [33:0] p_shl7_fu_426_p3;
wire   [37:0] p_shl108_cast_fu_422_p1;
wire   [37:0] p_shl109_cast_fu_434_p1;
wire   [37:0] empty_240_fu_438_p2;
wire   [32:0] zext_ln151_fu_364_p1;
wire   [32:0] zext_ln150_fu_330_p1;
wire   [32:0] empty_241_fu_448_p2;
wire   [37:0] p_shl8_fu_454_p3;
wire   [34:0] p_shl9_fu_466_p3;
wire   [38:0] p_shl106_cast_fu_462_p1;
wire   [38:0] p_shl107_cast_fu_474_p1;
wire  signed [38:0] p_cast153_fu_444_p1;
wire   [38:0] p_cast154_fu_333_p1;
wire   [3:0] add_ln150_1_fu_493_p2;
wire   [3:0] p_mid11915_fu_519_p0;
wire   [10:0] p_mid11915_fu_519_p1;
wire   [13:0] p_mid11915_fu_519_p2;
wire   [13:0] select_ln150_2_fu_529_p3;
wire   [11:0] p_shl104_mid1_fu_539_p3;
wire   [8:0] p_shl105_mid1_fu_551_p3;
wire   [12:0] p_shl104_cast_mid1_fu_547_p1;
wire   [12:0] p_shl105_cast_mid1_fu_559_p1;
wire   [12:0] p_mid11917_fu_563_p2;
wire   [12:0] empty_238_fu_358_p2;
wire   [12:0] select_ln150_3_fu_569_p3;
wire   [0:0] empty_239_fu_368_p1;
wire   [0:0] xor_ln150_fu_580_p2;
wire   [31:0] mul7_i361_fu_408_p2;
wire   [5:0] tmp_21_fu_602_p3;
wire   [9:0] p_shl105_mid1_cast_fu_598_p1;
wire   [9:0] zext_ln158_fu_610_p1;
wire   [9:0] sub_ln158_1_fu_614_p2;
wire  signed [38:0] sext_ln150_1_fu_620_p1;
wire   [38:0] sub_ln158_fu_478_p2;
wire   [38:0] p_cast154_mid1_fu_525_p1;
wire   [38:0] add_ln156_fu_484_p2;
wire   [0:0] icmp_ln152_fu_638_p2;
wire   [31:0] select_ln150_fu_498_p3;
wire   [0:0] select_ln150_7_fu_643_p3;
wire   [0:0] or_ln151_fu_655_p2;
wire   [31:0] add_ln151_fu_649_p2;
wire   [0:0] empty_242_fu_672_p1;
wire   [0:0] and_ln150_fu_585_p2;
wire   [30:0] tmp_22_fu_684_p4;
wire   [27:0] tmp_23_fu_702_p4;
wire   [31:0] p_shl110_mid1_fu_712_p3;
wire   [31:0] div_i_udiv_mid1_fu_694_p3;
wire   [31:0] mul7_i361_mid1_fu_720_p2;
wire   [31:0] select_ln150_4_fu_591_p3;
wire   [36:0] p_shl108_mid1_fu_734_p3;
wire   [33:0] p_shl109_mid1_fu_746_p3;
wire   [37:0] p_shl108_cast_mid1_fu_742_p1;
wire   [37:0] p_shl109_cast_mid1_fu_754_p1;
wire   [37:0] p_mid11899_fu_758_p2;
wire   [32:0] zext_ln151_1_fu_668_p1;
wire   [32:0] zext_ln150_2_fu_511_p1;
wire   [32:0] p_mid11901_fu_768_p2;
wire   [37:0] p_shl106_mid1_fu_774_p3;
wire   [34:0] p_shl107_mid1_fu_786_p3;
wire   [38:0] p_shl106_cast_mid1_fu_782_p1;
wire   [38:0] p_shl107_cast_mid1_fu_794_p1;
wire   [38:0] sub_ln158_2_fu_798_p2;
wire   [38:0] select_ln150_5_fu_624_p3;
wire  signed [38:0] p_cast153_mid1_fu_764_p1;
wire   [38:0] select_ln150_20_cast_fu_535_p1;
wire   [38:0] add_ln156_1_fu_812_p2;
wire   [38:0] select_ln150_6_fu_631_p3;
wire   [30:0] div8_i_udiv_fu_834_p4;
wire  signed [31:0] sext_ln150_fu_576_p1;
wire   [31:0] div8_i_udiv_cast_fu_844_p1;
wire   [31:0] add_ln155_fu_848_p2;
wire   [31:0] select_ln151_2_fu_726_p3;
wire   [31:0] add_ln155_1_fu_854_p2;
wire   [34:0] shl_ln155_2_fu_860_p3;
wire  signed [63:0] sext_ln155_fu_868_p1;
wire   [63:0] add_ln155_2_fu_872_p2;
wire   [38:0] zext_ln156_fu_918_p1;
wire   [38:0] add_ln156_2_fu_921_p2;
wire   [41:0] tmp_26_fu_926_p3;
wire  signed [63:0] sext_ln156_fu_934_p1;
wire   [63:0] add_ln156_3_fu_938_p2;
wire   [32:0] zext_ln158_2_fu_956_p1;
wire   [32:0] add_ln158_fu_959_p2;
wire  signed [38:0] sext_ln158_fu_965_p1;
wire   [38:0] add_ln158_1_fu_969_p2;
wire   [41:0] tmp_24_fu_974_p3;
wire  signed [63:0] sext_ln158_1_fu_982_p1;
wire   [63:0] add_ln158_2_fu_986_p2;
wire   [38:0] zext_ln158_1_fu_953_p1;
wire   [38:0] add_ln158_3_fu_1001_p2;
wire   [41:0] tmp_25_fu_1006_p3;
wire  signed [63:0] sext_ln158_3_fu_1014_p1;
wire   [63:0] add_ln158_4_fu_1018_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [13:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage4_subdone;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [13:0] empty_fu_275_p00;
wire   [13:0] p_mid11915_fu_519_p00;
reg    ap_condition_1029;
reg    ap_condition_1033;
reg    ap_condition_1037;
reg    ap_condition_1041;
reg    ap_condition_1045;
reg    ap_condition_1049;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

CNN_mul_4ns_11ns_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 14 ))
mul_4ns_11ns_14_1_1_U211(
    .din0(empty_fu_275_p0),
    .din1(empty_fu_275_p1),
    .dout(empty_fu_275_p2)
);

CNN_mul_4ns_11ns_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 14 ))
mul_4ns_11ns_14_1_1_U212(
    .din0(p_mid11915_fu_519_p0),
    .din1(p_mid11915_fu_519_p1),
    .dout(p_mid11915_fu_519_p2)
);

CNN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_fu_132 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln150_reg_1146 == 1'd0))) begin
        i_fu_132 <= select_ln151_5_fu_826_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten1903_fu_136 <= 64'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln150_fu_281_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        indvar_flatten1903_fu_136 <= select_ln151_6_fu_309_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten1971_fu_144 <= 68'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln150_fu_281_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        indvar_flatten1971_fu_144 <= add_ln150_fu_286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        j_fu_128 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln150_reg_1146 == 1'd0))) begin
        j_fu_128 <= add_ln152_fu_887_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        num_channel_fu_140 <= 4'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln150_reg_1146 == 1'd0))) begin
        num_channel_fu_140 <= select_ln150_1_fu_505_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        empty_reg_1140 <= empty_fu_275_p2;
        icmp_ln150_reg_1146 <= icmp_ln150_fu_281_p2;
        num_channel_1_reg_1131 <= num_channel_fu_140;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op199_read_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        gmem_addr_read_reg_1229 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln150_fu_281_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        icmp_ln151_reg_1150 <= icmp_ln151_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln150_reg_1146 == 1'd0))) begin
        select_ln151_1_reg_1171 <= select_ln151_1_fu_676_p3;
        select_ln151_3_reg_1175[38 : 2] <= select_ln151_3_fu_804_p3[38 : 2];
        select_ln151_4_reg_1180 <= select_ln151_4_fu_818_p3;
        select_ln151_reg_1164 <= select_ln151_fu_660_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        select_ln151_1_reg_1171_pp0_iter1_reg <= select_ln151_1_reg_1171;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln151_1_fu_676_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln150_reg_1146 == 1'd0))) begin
        trunc_ln155_2_reg_1186 <= {{add_ln155_2_fu_872_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (select_ln151_1_reg_1171 == 1'd0) & (icmp_ln150_reg_1146 == 1'd0))) begin
        trunc_ln156_2_reg_1197 <= {{add_ln156_3_fu_938_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (select_ln151_1_reg_1171 == 1'd1) & (icmp_ln150_reg_1146 == 1'd0))) begin
        trunc_ln158_4_reg_1202 <= {{add_ln158_2_fu_986_p2[63:3]}};
        trunc_ln158_5_reg_1207 <= {{add_ln158_4_fu_1018_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op193_read_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        upsam_buf_reg_1218 <= m_axi_gmem_RDATA;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone) & (icmp_ln150_reg_1146 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_predicate_op158_readreq_state4 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (select_ln151_1_reg_1171 == 1'd1) & (icmp_ln150_reg_1146 == 1'd0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (select_ln151_1_reg_1171 == 1'd1) & (icmp_ln150_reg_1146 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (select_ln151_1_reg_1171 == 1'd0) & (icmp_ln150_reg_1146 == 1'd0)))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (select_ln151_1_reg_1171_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (select_ln151_1_reg_1171 == 1'd0)))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (select_ln151_1_reg_1171 == 1'd1) & (icmp_ln150_reg_1146 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (select_ln151_1_reg_1171 == 1'd0) & (icmp_ln150_reg_1146 == 1'd0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (select_ln151_1_reg_1171 == 1'd1) & (icmp_ln150_reg_1146 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (select_ln151_1_reg_1171 == 1'd0) & (icmp_ln150_reg_1146 == 1'd0)))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_1033)) begin
            m_axi_gmem_ARADDR = sext_ln158_2_fu_1033_p1;
        end else if ((1'b1 == ap_condition_1029)) begin
            m_axi_gmem_ARADDR = sext_ln155_1_fu_908_p1;
        end else begin
            m_axi_gmem_ARADDR = 'bx;
        end
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_predicate_op158_readreq_state4 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op182_readreq_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_1041)) begin
            m_axi_gmem_AWADDR = sext_ln158_4_fu_1053_p1;
        end else if ((1'b1 == ap_condition_1037)) begin
            m_axi_gmem_AWADDR = sext_ln156_1_fu_1043_p1;
        end else begin
            m_axi_gmem_AWADDR = 'bx;
        end
    end else begin
        m_axi_gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op202_writereq_state12 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op196_writereq_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (select_ln151_1_reg_1171_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (select_ln151_1_reg_1171 == 1'd0)))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op199_read_state12 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op193_read_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_1049)) begin
            m_axi_gmem_WDATA = gmem_addr_read_reg_1229;
        end else if ((1'b1 == ap_condition_1045)) begin
            m_axi_gmem_WDATA = upsam_buf_reg_1218;
        end else begin
            m_axi_gmem_WDATA = 'bx;
        end
    end else begin
        m_axi_gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op204_write_state13 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_predicate_op198_write_state12 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_idle_pp0_1to1 == 1'b1) & (ap_start_int == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln150_1_fu_493_p2 = (num_channel_1_reg_1131 + 4'd1);

assign add_ln150_fu_286_p2 = (indvar_flatten1971_fu_144 + 68'd1);

assign add_ln151_1_fu_303_p2 = (indvar_flatten1903_fu_136 + 64'd1);

assign add_ln151_fu_649_p2 = (select_ln150_fu_498_p3 + 32'd1);

assign add_ln152_fu_887_p2 = (select_ln151_fu_660_p3 + 32'd1);

assign add_ln155_1_fu_854_p2 = (add_ln155_fu_848_p2 + select_ln151_2_fu_726_p3);

assign add_ln155_2_fu_872_p2 = ($signed(sext_ln155_fu_868_p1) + $signed(output_conv6));

assign add_ln155_fu_848_p2 = ($signed(sext_ln150_fu_576_p1) + $signed(div8_i_udiv_cast_fu_844_p1));

assign add_ln156_1_fu_812_p2 = ($signed(p_cast153_mid1_fu_764_p1) + $signed(select_ln150_20_cast_fu_535_p1));

assign add_ln156_2_fu_921_p2 = (select_ln151_4_reg_1180 + zext_ln156_fu_918_p1);

assign add_ln156_3_fu_938_p2 = ($signed(sext_ln156_fu_934_p1) + $signed(output_upsampling3));

assign add_ln156_fu_484_p2 = ($signed(p_cast153_fu_444_p1) + $signed(p_cast154_fu_333_p1));

assign add_ln158_1_fu_969_p2 = ($signed(sext_ln158_fu_965_p1) + $signed(select_ln151_4_reg_1180));

assign add_ln158_2_fu_986_p2 = ($signed(sext_ln158_1_fu_982_p1) + $signed(output_upsampling3));

assign add_ln158_3_fu_1001_p2 = (zext_ln158_1_fu_953_p1 + select_ln151_3_reg_1175);

assign add_ln158_4_fu_1018_p2 = ($signed(sext_ln158_3_fu_1014_p1) + $signed(output_upsampling3));

assign add_ln158_fu_959_p2 = ($signed(zext_ln158_2_fu_956_p1) + $signed(33'd8589934564));

assign and_ln150_fu_585_p2 = (xor_ln150_fu_580_p2 & empty_239_fu_368_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op193_read_state11 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op193_read_state11 == 1'b1))));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_01001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op199_read_state12 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op199_read_state12 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op199_read_state12 == 1'b1))));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state13_io));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state13_io));
end

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((m_axi_gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln151_1_reg_1171 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((m_axi_gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln151_1_reg_1171 == 1'd0));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((m_axi_gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln151_1_reg_1171_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((m_axi_gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln151_1_reg_1171_pp0_iter1_reg == 1'd1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io));
end

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = ((m_axi_gmem_AWREADY == 1'b0) & (ap_predicate_op196_writereq_state11 == 1'b1));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op193_read_state11 == 1'b1));
end

always @ (*) begin
    ap_block_state12_io = (((m_axi_gmem_WREADY == 1'b0) & (ap_predicate_op198_write_state12 == 1'b1)) | ((m_axi_gmem_AWREADY == 1'b0) & (ap_predicate_op202_writereq_state12 == 1'b1)));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (ap_predicate_op199_read_state12 == 1'b1));
end

always @ (*) begin
    ap_block_state13_io = ((m_axi_gmem_WREADY == 1'b0) & (ap_predicate_op204_write_state13 == 1'b1));
end

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp0_stage2_iter1 = ((m_axi_gmem_BVALID == 1'b0) & (select_ln151_1_reg_1171 == 1'd0));
end

always @ (*) begin
    ap_block_state18_pp0_stage3_iter1 = ((m_axi_gmem_BVALID == 1'b0) & (select_ln151_1_reg_1171_pp0_iter1_reg == 1'd1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op158_readreq_state4 == 1'b1));
end

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((m_axi_gmem_ARREADY == 1'b0) & (ap_predicate_op182_readreq_state5 == 1'b1));
end

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1029 = ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_predicate_op158_readreq_state4 == 1'b1));
end

always @ (*) begin
    ap_condition_1033 = ((ap_predicate_op182_readreq_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001));
end

always @ (*) begin
    ap_condition_1037 = ((ap_predicate_op196_writereq_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001));
end

always @ (*) begin
    ap_condition_1041 = ((ap_predicate_op202_writereq_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001));
end

always @ (*) begin
    ap_condition_1045 = ((ap_predicate_op198_write_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_01001));
end

always @ (*) begin
    ap_condition_1049 = ((ap_predicate_op204_write_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_01001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

always @ (*) begin
    ap_predicate_op158_readreq_state4 = ((select_ln151_1_reg_1171 == 1'd0) & (icmp_ln150_reg_1146 == 1'd0));
end

always @ (*) begin
    ap_predicate_op182_readreq_state5 = ((select_ln151_1_reg_1171 == 1'd1) & (icmp_ln150_reg_1146 == 1'd0));
end

always @ (*) begin
    ap_predicate_op193_read_state11 = ((select_ln151_1_reg_1171 == 1'd0) & (icmp_ln150_reg_1146 == 1'd0));
end

always @ (*) begin
    ap_predicate_op196_writereq_state11 = ((select_ln151_1_reg_1171 == 1'd0) & (icmp_ln150_reg_1146 == 1'd0));
end

always @ (*) begin
    ap_predicate_op198_write_state12 = ((select_ln151_1_reg_1171 == 1'd0) & (icmp_ln150_reg_1146 == 1'd0));
end

always @ (*) begin
    ap_predicate_op199_read_state12 = ((select_ln151_1_reg_1171 == 1'd1) & (icmp_ln150_reg_1146 == 1'd0));
end

always @ (*) begin
    ap_predicate_op202_writereq_state12 = ((select_ln151_1_reg_1171 == 1'd1) & (icmp_ln150_reg_1146 == 1'd0));
end

always @ (*) begin
    ap_predicate_op204_write_state13 = ((select_ln151_1_reg_1171 == 1'd1) & (icmp_ln150_reg_1146 == 1'd0));
end

assign div8_i_udiv_cast_fu_844_p1 = div8_i_udiv_fu_834_p4;

assign div8_i_udiv_fu_834_p4 = {{select_ln151_fu_660_p3[31:1]}};

assign div_i_udiv_fu_382_p3 = {{tmp_s_fu_372_p4}, {1'd0}};

assign div_i_udiv_mid1_fu_694_p3 = {{tmp_22_fu_684_p4}, {1'd0}};

assign empty_238_fu_358_p2 = (p_shl104_cast_fu_343_p1 - p_shl105_cast_fu_354_p1);

assign empty_239_fu_368_p1 = i_fu_132[0:0];

assign empty_240_fu_438_p2 = (p_shl108_cast_fu_422_p1 - p_shl109_cast_fu_434_p1);

assign empty_241_fu_448_p2 = (zext_ln151_fu_364_p1 + zext_ln150_fu_330_p1);

assign empty_242_fu_672_p1 = add_ln151_fu_649_p2[0:0];

assign empty_fu_275_p0 = empty_fu_275_p00;

assign empty_fu_275_p00 = num_channel_fu_140;

assign empty_fu_275_p1 = 14'd784;

assign icmp_ln150_fu_281_p2 = ((indvar_flatten1971_fu_144 == mul_ln150) ? 1'b1 : 1'b0);

assign icmp_ln151_fu_295_p2 = ((indvar_flatten1903_fu_136 == mul_ln147) ? 1'b1 : 1'b0);

assign icmp_ln152_fu_638_p2 = ((j_fu_128 == shl_ln1) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd1;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 8'd255;

assign m_axi_gmem_WUSER = 1'd0;

assign mul7_i361_fu_408_p2 = (p_shl5_fu_400_p3 - div_i_udiv_fu_382_p3);

assign mul7_i361_mid1_fu_720_p2 = (p_shl110_mid1_fu_712_p3 - div_i_udiv_mid1_fu_694_p3);

assign or_ln151_fu_655_p2 = (select_ln150_7_fu_643_p3 | icmp_ln151_reg_1150);

assign p_cast153_fu_444_p1 = $signed(empty_240_fu_438_p2);

assign p_cast153_mid1_fu_764_p1 = $signed(p_mid11899_fu_758_p2);

assign p_cast154_fu_333_p1 = empty_reg_1140;

assign p_cast154_mid1_fu_525_p1 = p_mid11915_fu_519_p2;

assign p_mid11899_fu_758_p2 = (p_shl108_cast_mid1_fu_742_p1 - p_shl109_cast_mid1_fu_754_p1);

assign p_mid11901_fu_768_p2 = (zext_ln151_1_fu_668_p1 + zext_ln150_2_fu_511_p1);

assign p_mid11915_fu_519_p0 = p_mid11915_fu_519_p00;

assign p_mid11915_fu_519_p00 = add_ln150_1_fu_493_p2;

assign p_mid11915_fu_519_p1 = 14'd784;

assign p_mid11917_fu_563_p2 = (p_shl104_cast_mid1_fu_547_p1 - p_shl105_cast_mid1_fu_559_p1);

assign p_shl104_cast_fu_343_p1 = p_shl_fu_336_p3;

assign p_shl104_cast_mid1_fu_547_p1 = p_shl104_mid1_fu_539_p3;

assign p_shl104_mid1_fu_539_p3 = {{add_ln150_1_fu_493_p2}, {8'd0}};

assign p_shl105_cast_fu_354_p1 = p_shl4_fu_347_p3;

assign p_shl105_cast_mid1_fu_559_p1 = p_shl105_mid1_fu_551_p3;

assign p_shl105_mid1_cast_fu_598_p1 = p_shl105_mid1_fu_551_p3;

assign p_shl105_mid1_fu_551_p3 = {{add_ln150_1_fu_493_p2}, {5'd0}};

assign p_shl106_cast_fu_462_p1 = p_shl8_fu_454_p3;

assign p_shl106_cast_mid1_fu_782_p1 = p_shl106_mid1_fu_774_p3;

assign p_shl106_mid1_fu_774_p3 = {{p_mid11901_fu_768_p2}, {5'd0}};

assign p_shl107_cast_fu_474_p1 = p_shl9_fu_466_p3;

assign p_shl107_cast_mid1_fu_794_p1 = p_shl107_mid1_fu_786_p3;

assign p_shl107_mid1_fu_786_p3 = {{p_mid11901_fu_768_p2}, {2'd0}};

assign p_shl108_cast_fu_422_p1 = p_shl6_fu_414_p3;

assign p_shl108_cast_mid1_fu_742_p1 = p_shl108_mid1_fu_734_p3;

assign p_shl108_mid1_fu_734_p3 = {{add_ln151_fu_649_p2}, {5'd0}};

assign p_shl109_cast_fu_434_p1 = p_shl7_fu_426_p3;

assign p_shl109_cast_mid1_fu_754_p1 = p_shl109_mid1_fu_746_p3;

assign p_shl109_mid1_fu_746_p3 = {{add_ln151_fu_649_p2}, {2'd0}};

assign p_shl110_mid1_fu_712_p3 = {{tmp_23_fu_702_p4}, {4'd0}};

assign p_shl4_fu_347_p3 = {{num_channel_1_reg_1131}, {5'd0}};

assign p_shl5_fu_400_p3 = {{tmp_20_fu_390_p4}, {4'd0}};

assign p_shl6_fu_414_p3 = {{i_fu_132}, {5'd0}};

assign p_shl7_fu_426_p3 = {{i_fu_132}, {2'd0}};

assign p_shl8_fu_454_p3 = {{empty_241_fu_448_p2}, {5'd0}};

assign p_shl9_fu_466_p3 = {{empty_241_fu_448_p2}, {2'd0}};

assign p_shl_fu_336_p3 = {{num_channel_1_reg_1131}, {8'd0}};

assign select_ln150_1_fu_505_p3 = ((icmp_ln151_reg_1150[0:0] == 1'b1) ? add_ln150_1_fu_493_p2 : num_channel_1_reg_1131);

assign select_ln150_20_cast_fu_535_p1 = select_ln150_2_fu_529_p3;

assign select_ln150_2_fu_529_p3 = ((icmp_ln151_reg_1150[0:0] == 1'b1) ? p_mid11915_fu_519_p2 : empty_reg_1140);

assign select_ln150_3_fu_569_p3 = ((icmp_ln151_reg_1150[0:0] == 1'b1) ? p_mid11917_fu_563_p2 : empty_238_fu_358_p2);

assign select_ln150_4_fu_591_p3 = ((icmp_ln151_reg_1150[0:0] == 1'b1) ? 32'd0 : mul7_i361_fu_408_p2);

assign select_ln150_5_fu_624_p3 = ((icmp_ln151_reg_1150[0:0] == 1'b1) ? sext_ln150_1_fu_620_p1 : sub_ln158_fu_478_p2);

assign select_ln150_6_fu_631_p3 = ((icmp_ln151_reg_1150[0:0] == 1'b1) ? p_cast154_mid1_fu_525_p1 : add_ln156_fu_484_p2);

assign select_ln150_7_fu_643_p3 = ((icmp_ln151_reg_1150[0:0] == 1'b1) ? icmp_ln152_3 : icmp_ln152_fu_638_p2);

assign select_ln150_fu_498_p3 = ((icmp_ln151_reg_1150[0:0] == 1'b1) ? 32'd0 : i_fu_132);

assign select_ln151_1_fu_676_p3 = ((select_ln150_7_fu_643_p3[0:0] == 1'b1) ? empty_242_fu_672_p1 : and_ln150_fu_585_p2);

assign select_ln151_2_fu_726_p3 = ((select_ln150_7_fu_643_p3[0:0] == 1'b1) ? mul7_i361_mid1_fu_720_p2 : select_ln150_4_fu_591_p3);

assign select_ln151_3_fu_804_p3 = ((select_ln150_7_fu_643_p3[0:0] == 1'b1) ? sub_ln158_2_fu_798_p2 : select_ln150_5_fu_624_p3);

assign select_ln151_4_fu_818_p3 = ((select_ln150_7_fu_643_p3[0:0] == 1'b1) ? add_ln156_1_fu_812_p2 : select_ln150_6_fu_631_p3);

assign select_ln151_5_fu_826_p3 = ((select_ln150_7_fu_643_p3[0:0] == 1'b1) ? add_ln151_fu_649_p2 : select_ln150_fu_498_p3);

assign select_ln151_6_fu_309_p3 = ((icmp_ln151_fu_295_p2[0:0] == 1'b1) ? 64'd1 : add_ln151_1_fu_303_p2);

assign select_ln151_fu_660_p3 = ((or_ln151_fu_655_p2[0:0] == 1'b1) ? 32'd0 : j_fu_128);

assign sext_ln150_1_fu_620_p1 = $signed(sub_ln158_1_fu_614_p2);

assign sext_ln150_fu_576_p1 = $signed(select_ln150_3_fu_569_p3);

assign sext_ln155_1_fu_908_p1 = $signed(trunc_ln155_2_reg_1186);

assign sext_ln155_fu_868_p1 = $signed(shl_ln155_2_fu_860_p3);

assign sext_ln156_1_fu_1043_p1 = $signed(trunc_ln156_2_reg_1197);

assign sext_ln156_fu_934_p1 = $signed(tmp_26_fu_926_p3);

assign sext_ln158_1_fu_982_p1 = $signed(tmp_24_fu_974_p3);

assign sext_ln158_2_fu_1033_p1 = $signed(trunc_ln158_4_reg_1202);

assign sext_ln158_3_fu_1014_p1 = $signed(tmp_25_fu_1006_p3);

assign sext_ln158_4_fu_1053_p1 = $signed(trunc_ln158_5_reg_1207);

assign sext_ln158_fu_965_p1 = $signed(add_ln158_fu_959_p2);

assign shl_ln155_2_fu_860_p3 = {{add_ln155_1_fu_854_p2}, {3'd0}};

assign sub_ln158_1_fu_614_p2 = (p_shl105_mid1_cast_fu_598_p1 - zext_ln158_fu_610_p1);

assign sub_ln158_2_fu_798_p2 = (p_shl106_cast_mid1_fu_782_p1 - p_shl107_cast_mid1_fu_794_p1);

assign sub_ln158_fu_478_p2 = (p_shl106_cast_fu_462_p1 - p_shl107_cast_fu_474_p1);

assign tmp_20_fu_390_p4 = {{i_fu_132[28:1]}};

assign tmp_21_fu_602_p3 = {{add_ln150_1_fu_493_p2}, {2'd0}};

assign tmp_22_fu_684_p4 = {{add_ln151_fu_649_p2[31:1]}};

assign tmp_23_fu_702_p4 = {{add_ln151_fu_649_p2[28:1]}};

assign tmp_24_fu_974_p3 = {{add_ln158_1_fu_969_p2}, {3'd0}};

assign tmp_25_fu_1006_p3 = {{add_ln158_3_fu_1001_p2}, {3'd0}};

assign tmp_26_fu_926_p3 = {{add_ln156_2_fu_921_p2}, {3'd0}};

assign tmp_s_fu_372_p4 = {{i_fu_132[31:1]}};

assign xor_ln150_fu_580_p2 = (icmp_ln151_reg_1150 ^ 1'd1);

assign zext_ln150_2_fu_511_p1 = select_ln150_1_fu_505_p3;

assign zext_ln150_fu_330_p1 = num_channel_1_reg_1131;

assign zext_ln151_1_fu_668_p1 = add_ln151_fu_649_p2;

assign zext_ln151_fu_364_p1 = i_fu_132;

assign zext_ln156_fu_918_p1 = select_ln151_reg_1164;

assign zext_ln158_1_fu_953_p1 = select_ln151_reg_1164;

assign zext_ln158_2_fu_956_p1 = select_ln151_reg_1164;

assign zext_ln158_fu_610_p1 = tmp_21_fu_602_p3;

always @ (posedge ap_clk) begin
    select_ln151_3_reg_1175[1:0] <= 2'b00;
end

endmodule //CNN_CNN_Pipeline_VITIS_LOOP_150_1_VITIS_LOOP_151_2_VITIS_LOOP_152_326
